ARM GAS  /tmp/cc8ObT6R.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART2_UART_Init
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_USART2_UART_Init:
  24              	.LFB64:
  25              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   ** This notice applies to any and all portions of this file
   8:Src/usart.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usart.c   ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usart.c   ****   * inserted by the user or by software development tools
  11:Src/usart.c   ****   * are owned by their respective copyright owners.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/usart.c   ****   *
  15:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/usart.c   ****   * are permitted provided that the following conditions are met:
  17:Src/usart.c   ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/usart.c   ****   *      this list of conditions and the following disclaimer.
  19:Src/usart.c   ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/usart.c   ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/usart.c   ****   *      and/or other materials provided with the distribution.
  22:Src/usart.c   ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/usart.c   ****   *      may be used to endorse or promote products derived from this software
  24:Src/usart.c   ****   *      without specific prior written permission.
  25:Src/usart.c   ****   *
  26:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/usart.c   ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/usart.c   ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/usart.c   ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/usart.c   ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/usart.c   ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/usart.c   ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/usart.c   ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/cc8ObT6R.s 			page 2


  34:Src/usart.c   ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/usart.c   ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/usart.c   ****   *
  37:Src/usart.c   ****   ******************************************************************************
  38:Src/usart.c   ****   */
  39:Src/usart.c   **** 
  40:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  41:Src/usart.c   **** #include "usart.h"
  42:Src/usart.c   **** 
  43:Src/usart.c   **** #include "gpio.h"
  44:Src/usart.c   **** 
  45:Src/usart.c   **** /* USER CODE BEGIN 0 */
  46:Src/usart.c   **** 
  47:Src/usart.c   **** /* USER CODE END 0 */
  48:Src/usart.c   **** 
  49:Src/usart.c   **** UART_HandleTypeDef huart2;
  50:Src/usart.c   **** 
  51:Src/usart.c   **** /* USART2 init function */
  52:Src/usart.c   **** 
  53:Src/usart.c   **** void MX_USART2_UART_Init(void)
  54:Src/usart.c   **** {
  26              		.loc 1 54 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  55:Src/usart.c   **** 
  56:Src/usart.c   ****   huart2.Instance = USART2;
  35              		.loc 1 56 0
  36 0002 0B48     		ldr	r0, .L5
  37 0004 0B4B     		ldr	r3, .L5+4
  38 0006 0360     		str	r3, [r0]
  57:Src/usart.c   ****   huart2.Init.BaudRate = 9600;
  39              		.loc 1 57 0
  40 0008 4FF41653 		mov	r3, #9600
  41 000c 4360     		str	r3, [r0, #4]
  58:Src/usart.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  42              		.loc 1 58 0
  43 000e 0023     		movs	r3, #0
  44 0010 8360     		str	r3, [r0, #8]
  59:Src/usart.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
  45              		.loc 1 59 0
  46 0012 C360     		str	r3, [r0, #12]
  60:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
  47              		.loc 1 60 0
  48 0014 0361     		str	r3, [r0, #16]
  61:Src/usart.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
  49              		.loc 1 61 0
  50 0016 0C22     		movs	r2, #12
  51 0018 4261     		str	r2, [r0, #20]
  62:Src/usart.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  52              		.loc 1 62 0
  53 001a 8361     		str	r3, [r0, #24]
ARM GAS  /tmp/cc8ObT6R.s 			page 3


  63:Src/usart.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  54              		.loc 1 63 0
  55 001c C361     		str	r3, [r0, #28]
  64:Src/usart.c   ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  56              		.loc 1 64 0
  57 001e FFF7FEFF 		bl	HAL_UART_Init
  58              	.LVL0:
  59 0022 00B9     		cbnz	r0, .L4
  60              	.L1:
  61 0024 08BD     		pop	{r3, pc}
  62              	.L4:
  65:Src/usart.c   ****   {
  66:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
  63              		.loc 1 66 0
  64 0026 4221     		movs	r1, #66
  65 0028 0348     		ldr	r0, .L5+8
  66 002a FFF7FEFF 		bl	_Error_Handler
  67              	.LVL1:
  67:Src/usart.c   ****   }
  68:Src/usart.c   **** 
  69:Src/usart.c   **** }
  68              		.loc 1 69 0
  69 002e F9E7     		b	.L1
  70              	.L6:
  71              		.align	2
  72              	.L5:
  73 0030 00000000 		.word	huart2
  74 0034 00440040 		.word	1073759232
  75 0038 00000000 		.word	.LC0
  76              		.cfi_endproc
  77              	.LFE64:
  79              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  80              		.align	1
  81              		.global	HAL_UART_MspInit
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu softvfp
  87              	HAL_UART_MspInit:
  88              	.LFB65:
  70:Src/usart.c   **** 
  71:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  72:Src/usart.c   **** {
  89              		.loc 1 72 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 24
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL2:
  73:Src/usart.c   **** 
  74:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
  75:Src/usart.c   ****   if(uartHandle->Instance==USART2)
  94              		.loc 1 75 0
  95 0000 0268     		ldr	r2, [r0]
  96 0002 134B     		ldr	r3, .L14
  97 0004 9A42     		cmp	r2, r3
  98 0006 00D0     		beq	.L13
  99 0008 7047     		bx	lr
ARM GAS  /tmp/cc8ObT6R.s 			page 4


 100              	.L13:
  72:Src/usart.c   **** 
 101              		.loc 1 72 0
 102 000a 10B5     		push	{r4, lr}
 103              	.LCFI1:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 4, -8
 106              		.cfi_offset 14, -4
 107 000c 86B0     		sub	sp, sp, #24
 108              	.LCFI2:
 109              		.cfi_def_cfa_offset 32
 110              	.LBB2:
  76:Src/usart.c   ****   {
  77:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
  78:Src/usart.c   **** 
  79:Src/usart.c   ****   /* USER CODE END USART2_MspInit 0 */
  80:Src/usart.c   ****     /* USART2 clock enable */
  81:Src/usart.c   ****     __HAL_RCC_USART2_CLK_ENABLE();
 111              		.loc 1 81 0
 112 000e 03F5E633 		add	r3, r3, #117760
 113 0012 DA69     		ldr	r2, [r3, #28]
 114 0014 42F40032 		orr	r2, r2, #131072
 115 0018 DA61     		str	r2, [r3, #28]
 116 001a DB69     		ldr	r3, [r3, #28]
 117 001c 03F40033 		and	r3, r3, #131072
 118 0020 0193     		str	r3, [sp, #4]
 119 0022 019B     		ldr	r3, [sp, #4]
 120              	.LBE2:
  82:Src/usart.c   ****   
  83:Src/usart.c   ****     /**USART2 GPIO Configuration    
  84:Src/usart.c   ****     PA2     ------> USART2_TX
  85:Src/usart.c   ****     PA3     ------> USART2_RX 
  86:Src/usart.c   ****     */
  87:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_2;
 121              		.loc 1 87 0
 122 0024 0423     		movs	r3, #4
 123 0026 0293     		str	r3, [sp, #8]
  88:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 124              		.loc 1 88 0
 125 0028 0223     		movs	r3, #2
 126 002a 0393     		str	r3, [sp, #12]
  89:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 127              		.loc 1 89 0
 128 002c 0323     		movs	r3, #3
 129 002e 0593     		str	r3, [sp, #20]
  90:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 130              		.loc 1 90 0
 131 0030 084C     		ldr	r4, .L14+4
 132 0032 02A9     		add	r1, sp, #8
 133 0034 2046     		mov	r0, r4
 134              	.LVL3:
 135 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 136              	.LVL4:
  91:Src/usart.c   **** 
  92:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_3;
 137              		.loc 1 92 0
 138 003a 0823     		movs	r3, #8
ARM GAS  /tmp/cc8ObT6R.s 			page 5


 139 003c 0293     		str	r3, [sp, #8]
  93:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 140              		.loc 1 93 0
 141 003e 0023     		movs	r3, #0
 142 0040 0393     		str	r3, [sp, #12]
  94:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 143              		.loc 1 94 0
 144 0042 0493     		str	r3, [sp, #16]
  95:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 145              		.loc 1 95 0
 146 0044 02A9     		add	r1, sp, #8
 147 0046 2046     		mov	r0, r4
 148 0048 FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL5:
  96:Src/usart.c   **** 
  97:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
  98:Src/usart.c   **** 
  99:Src/usart.c   ****   /* USER CODE END USART2_MspInit 1 */
 100:Src/usart.c   ****   }
 101:Src/usart.c   **** }
 150              		.loc 1 101 0
 151 004c 06B0     		add	sp, sp, #24
 152              	.LCFI3:
 153              		.cfi_def_cfa_offset 8
 154              		@ sp needed
 155 004e 10BD     		pop	{r4, pc}
 156              	.L15:
 157              		.align	2
 158              	.L14:
 159 0050 00440040 		.word	1073759232
 160 0054 00080140 		.word	1073809408
 161              		.cfi_endproc
 162              	.LFE65:
 164              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 165              		.align	1
 166              		.global	HAL_UART_MspDeInit
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 170              		.fpu softvfp
 172              	HAL_UART_MspDeInit:
 173              	.LFB66:
 102:Src/usart.c   **** 
 103:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 104:Src/usart.c   **** {
 174              		.loc 1 104 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              	.LVL6:
 179 0000 08B5     		push	{r3, lr}
 180              	.LCFI4:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 3, -8
 183              		.cfi_offset 14, -4
 105:Src/usart.c   **** 
 106:Src/usart.c   ****   if(uartHandle->Instance==USART2)
ARM GAS  /tmp/cc8ObT6R.s 			page 6


 184              		.loc 1 106 0
 185 0002 0268     		ldr	r2, [r0]
 186 0004 064B     		ldr	r3, .L20
 187 0006 9A42     		cmp	r2, r3
 188 0008 00D0     		beq	.L19
 189              	.LVL7:
 190              	.L16:
 191 000a 08BD     		pop	{r3, pc}
 192              	.LVL8:
 193              	.L19:
 107:Src/usart.c   ****   {
 108:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 109:Src/usart.c   **** 
 110:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 0 */
 111:Src/usart.c   ****     /* Peripheral clock disable */
 112:Src/usart.c   ****     __HAL_RCC_USART2_CLK_DISABLE();
 194              		.loc 1 112 0
 195 000c 054A     		ldr	r2, .L20+4
 196 000e D369     		ldr	r3, [r2, #28]
 197 0010 23F40033 		bic	r3, r3, #131072
 198 0014 D361     		str	r3, [r2, #28]
 113:Src/usart.c   ****   
 114:Src/usart.c   ****     /**USART2 GPIO Configuration    
 115:Src/usart.c   ****     PA2     ------> USART2_TX
 116:Src/usart.c   ****     PA3     ------> USART2_RX 
 117:Src/usart.c   ****     */
 118:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 199              		.loc 1 118 0
 200 0016 0C21     		movs	r1, #12
 201 0018 0348     		ldr	r0, .L20+8
 202              	.LVL9:
 203 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 204              	.LVL10:
 119:Src/usart.c   **** 
 120:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 121:Src/usart.c   **** 
 122:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 1 */
 123:Src/usart.c   ****   }
 124:Src/usart.c   **** } 
 205              		.loc 1 124 0
 206 001e F4E7     		b	.L16
 207              	.L21:
 208              		.align	2
 209              	.L20:
 210 0020 00440040 		.word	1073759232
 211 0024 00100240 		.word	1073876992
 212 0028 00080140 		.word	1073809408
 213              		.cfi_endproc
 214              	.LFE66:
 216              		.comm	huart2,64,4
 217              		.section	.rodata.MX_USART2_UART_Init.str1.4,"aMS",%progbits,1
 218              		.align	2
 219              	.LC0:
 220 0000 5372632F 		.ascii	"Src/usart.c\000"
 220      75736172 
 220      742E6300 
 221              		.text
ARM GAS  /tmp/cc8ObT6R.s 			page 7


 222              	.Letext0:
 223              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 224              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 225              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 226              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 227              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 228              		.file 7 "/usr/include/newlib/sys/lock.h"
 229              		.file 8 "/usr/include/newlib/sys/_types.h"
 230              		.file 9 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 231              		.file 10 "/usr/include/newlib/sys/reent.h"
 232              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 233              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 234              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 235              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 236              		.file 15 "Inc/usart.h"
ARM GAS  /tmp/cc8ObT6R.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/cc8ObT6R.s:16     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cc8ObT6R.s:23     .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cc8ObT6R.s:73     .text.MX_USART2_UART_Init:0000000000000030 $d
                            *COM*:0000000000000040 huart2
     /tmp/cc8ObT6R.s:80     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc8ObT6R.s:87     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc8ObT6R.s:159    .text.HAL_UART_MspInit:0000000000000050 $d
     /tmp/cc8ObT6R.s:165    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc8ObT6R.s:172    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc8ObT6R.s:210    .text.HAL_UART_MspDeInit:0000000000000020 $d
     /tmp/cc8ObT6R.s:218    .rodata.MX_USART2_UART_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
