ARM GAS  /tmp/ccQpm1zg.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_TIM_PWM_MspInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_TIM_PWM_MspInit:
  24              	.LFB68:
  25              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/tim.c     ****   *
  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccQpm1zg.s 			page 2


  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** 
  43:Src/tim.c     **** /* USER CODE BEGIN 0 */
  44:Src/tim.c     **** 
  45:Src/tim.c     **** /* USER CODE END 0 */
  46:Src/tim.c     **** 
  47:Src/tim.c     **** TIM_HandleTypeDef htim1;
  48:Src/tim.c     **** TIM_HandleTypeDef htim3;
  49:Src/tim.c     **** 
  50:Src/tim.c     **** /* TIM1 init function */
  51:Src/tim.c     **** void MX_TIM1_Init(void)
  52:Src/tim.c     **** {
  53:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  54:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
  55:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
  56:Src/tim.c     **** 
  57:Src/tim.c     ****   htim1.Instance = TIM1;
  58:Src/tim.c     ****   htim1.Init.Prescaler = 0;
  59:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  60:Src/tim.c     ****   htim1.Init.Period = 0;
  61:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  62:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
  63:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  64:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  65:Src/tim.c     ****   {
  66:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  67:Src/tim.c     ****   }
  68:Src/tim.c     **** 
  69:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  70:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  71:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  72:Src/tim.c     ****   {
  73:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  74:Src/tim.c     ****   }
  75:Src/tim.c     **** 
  76:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  77:Src/tim.c     ****   sConfigOC.Pulse = 0;
  78:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  79:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  80:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  81:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  82:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  83:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  84:Src/tim.c     ****   {
  85:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  86:Src/tim.c     ****   }
  87:Src/tim.c     **** 
  88:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  89:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  90:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
ARM GAS  /tmp/ccQpm1zg.s 			page 3


  91:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 0;
  92:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  93:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  94:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  95:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  96:Src/tim.c     ****   {
  97:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  98:Src/tim.c     ****   }
  99:Src/tim.c     **** 
 100:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim1);
 101:Src/tim.c     **** 
 102:Src/tim.c     **** }
 103:Src/tim.c     **** /* TIM3 init function */
 104:Src/tim.c     **** void MX_TIM3_Init(void)
 105:Src/tim.c     **** {
 106:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 107:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
 108:Src/tim.c     **** 
 109:Src/tim.c     ****   htim3.Instance = TIM3;
 110:Src/tim.c     ****   htim3.Init.Prescaler = 0;
 111:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 112:Src/tim.c     ****   htim3.Init.Period = 0;
 113:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 114:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 115:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 116:Src/tim.c     ****   {
 117:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 118:Src/tim.c     ****   }
 119:Src/tim.c     **** 
 120:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 121:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 122:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 123:Src/tim.c     ****   {
 124:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 125:Src/tim.c     ****   }
 126:Src/tim.c     **** 
 127:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 128:Src/tim.c     ****   sConfigOC.Pulse = 0;
 129:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 130:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 131:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 132:Src/tim.c     ****   {
 133:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 134:Src/tim.c     ****   }
 135:Src/tim.c     **** 
 136:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim3);
 137:Src/tim.c     **** 
 138:Src/tim.c     **** }
 139:Src/tim.c     **** 
 140:Src/tim.c     **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
 141:Src/tim.c     **** {
  26              		.loc 1 141 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
ARM GAS  /tmp/ccQpm1zg.s 			page 4


  32 0000 82B0     		sub	sp, sp, #8
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
 142:Src/tim.c     **** 
 143:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM1)
  35              		.loc 1 143 0
  36 0002 0368     		ldr	r3, [r0]
  37 0004 0E4A     		ldr	r2, .L7
  38 0006 9342     		cmp	r3, r2
  39 0008 04D0     		beq	.L5
 144:Src/tim.c     ****   {
 145:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 146:Src/tim.c     **** 
 147:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 0 */
 148:Src/tim.c     ****     /* TIM1 clock enable */
 149:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_ENABLE();
 150:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 151:Src/tim.c     **** 
 152:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 1 */
 153:Src/tim.c     ****   }
 154:Src/tim.c     ****   else if(tim_pwmHandle->Instance==TIM3)
  40              		.loc 1 154 0
  41 000a 0E4A     		ldr	r2, .L7+4
  42 000c 9342     		cmp	r3, r2
  43 000e 0CD0     		beq	.L6
  44              	.L1:
 155:Src/tim.c     ****   {
 156:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 157:Src/tim.c     **** 
 158:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 159:Src/tim.c     ****     /* TIM3 clock enable */
 160:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 161:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 162:Src/tim.c     **** 
 163:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 164:Src/tim.c     ****   }
 165:Src/tim.c     **** }
  45              		.loc 1 165 0
  46 0010 02B0     		add	sp, sp, #8
  47              	.LCFI1:
  48              		.cfi_remember_state
  49              		.cfi_def_cfa_offset 0
  50              		@ sp needed
  51 0012 7047     		bx	lr
  52              	.L5:
  53              	.LCFI2:
  54              		.cfi_restore_state
  55              	.LBB2:
 149:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
  56              		.loc 1 149 0
  57 0014 0C4B     		ldr	r3, .L7+8
  58 0016 9A69     		ldr	r2, [r3, #24]
  59 0018 42F40062 		orr	r2, r2, #2048
  60 001c 9A61     		str	r2, [r3, #24]
  61 001e 9B69     		ldr	r3, [r3, #24]
  62 0020 03F40063 		and	r3, r3, #2048
  63 0024 0093     		str	r3, [sp]
ARM GAS  /tmp/ccQpm1zg.s 			page 5


  64 0026 009B     		ldr	r3, [sp]
  65              	.LBE2:
  66 0028 F2E7     		b	.L1
  67              	.L6:
  68              	.LBB3:
 160:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
  69              		.loc 1 160 0
  70 002a 074B     		ldr	r3, .L7+8
  71 002c DA69     		ldr	r2, [r3, #28]
  72 002e 42F00202 		orr	r2, r2, #2
  73 0032 DA61     		str	r2, [r3, #28]
  74 0034 DB69     		ldr	r3, [r3, #28]
  75 0036 03F00203 		and	r3, r3, #2
  76 003a 0193     		str	r3, [sp, #4]
  77 003c 019B     		ldr	r3, [sp, #4]
  78              	.LBE3:
  79              		.loc 1 165 0
  80 003e E7E7     		b	.L1
  81              	.L8:
  82              		.align	2
  83              	.L7:
  84 0040 002C0140 		.word	1073818624
  85 0044 00040040 		.word	1073742848
  86 0048 00100240 		.word	1073876992
  87              		.cfi_endproc
  88              	.LFE68:
  90              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
  91              		.align	1
  92              		.global	HAL_TIM_MspPostInit
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu softvfp
  98              	HAL_TIM_MspPostInit:
  99              	.LFB69:
 166:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 167:Src/tim.c     **** {
 100              		.loc 1 167 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 16
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              	.LVL1:
 105 0000 00B5     		push	{lr}
 106              	.LCFI3:
 107              		.cfi_def_cfa_offset 4
 108              		.cfi_offset 14, -4
 109 0002 85B0     		sub	sp, sp, #20
 110              	.LCFI4:
 111              		.cfi_def_cfa_offset 24
 168:Src/tim.c     **** 
 169:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 170:Src/tim.c     ****   if(timHandle->Instance==TIM1)
 112              		.loc 1 170 0
 113 0004 0368     		ldr	r3, [r0]
 114 0006 0F4A     		ldr	r2, .L15
 115 0008 9342     		cmp	r3, r2
 116 000a 05D0     		beq	.L13
ARM GAS  /tmp/ccQpm1zg.s 			page 6


 171:Src/tim.c     ****   {
 172:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 173:Src/tim.c     **** 
 174:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 0 */
 175:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 176:Src/tim.c     ****     PA8     ------> TIM1_CH1 
 177:Src/tim.c     ****     */
 178:Src/tim.c     ****     GPIO_InitStruct.Pin = STM32_FAN_PWM_OUTPUT_Pin;
 179:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 180:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 181:Src/tim.c     ****     HAL_GPIO_Init(STM32_FAN_PWM_OUTPUT_GPIO_Port, &GPIO_InitStruct);
 182:Src/tim.c     **** 
 183:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 184:Src/tim.c     **** 
 185:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 1 */
 186:Src/tim.c     ****   }
 187:Src/tim.c     ****   else if(timHandle->Instance==TIM3)
 117              		.loc 1 187 0
 118 000c 0E4A     		ldr	r2, .L15+4
 119 000e 9342     		cmp	r3, r2
 120 0010 0DD0     		beq	.L14
 121              	.LVL2:
 122              	.L9:
 188:Src/tim.c     ****   {
 189:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 190:Src/tim.c     **** 
 191:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 0 */
 192:Src/tim.c     ****   
 193:Src/tim.c     ****     /**TIM3 GPIO Configuration    
 194:Src/tim.c     ****     PA6     ------> TIM3_CH1 
 195:Src/tim.c     ****     */
 196:Src/tim.c     ****     GPIO_InitStruct.Pin = STM32_WS2812_OUTPUT_Pin;
 197:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 198:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 199:Src/tim.c     ****     HAL_GPIO_Init(STM32_WS2812_OUTPUT_GPIO_Port, &GPIO_InitStruct);
 200:Src/tim.c     **** 
 201:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 202:Src/tim.c     **** 
 203:Src/tim.c     ****   /* USER CODE END TIM3_MspPostInit 1 */
 204:Src/tim.c     ****   }
 205:Src/tim.c     **** 
 206:Src/tim.c     **** }
 123              		.loc 1 206 0
 124 0012 05B0     		add	sp, sp, #20
 125              	.LCFI5:
 126              		.cfi_remember_state
 127              		.cfi_def_cfa_offset 4
 128              		@ sp needed
 129 0014 5DF804FB 		ldr	pc, [sp], #4
 130              	.LVL3:
 131              	.L13:
 132              	.LCFI6:
 133              		.cfi_restore_state
 178:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 134              		.loc 1 178 0
 135 0018 4FF48073 		mov	r3, #256
 136 001c 0093     		str	r3, [sp]
ARM GAS  /tmp/ccQpm1zg.s 			page 7


 179:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 137              		.loc 1 179 0
 138 001e 0223     		movs	r3, #2
 139 0020 0193     		str	r3, [sp, #4]
 180:Src/tim.c     ****     HAL_GPIO_Init(STM32_FAN_PWM_OUTPUT_GPIO_Port, &GPIO_InitStruct);
 140              		.loc 1 180 0
 141 0022 0393     		str	r3, [sp, #12]
 181:Src/tim.c     **** 
 142              		.loc 1 181 0
 143 0024 6946     		mov	r1, sp
 144 0026 0948     		ldr	r0, .L15+8
 145              	.LVL4:
 146 0028 FFF7FEFF 		bl	HAL_GPIO_Init
 147              	.LVL5:
 148 002c F1E7     		b	.L9
 149              	.LVL6:
 150              	.L14:
 196:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 151              		.loc 1 196 0
 152 002e 4023     		movs	r3, #64
 153 0030 0093     		str	r3, [sp]
 197:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 154              		.loc 1 197 0
 155 0032 0223     		movs	r3, #2
 156 0034 0193     		str	r3, [sp, #4]
 198:Src/tim.c     ****     HAL_GPIO_Init(STM32_WS2812_OUTPUT_GPIO_Port, &GPIO_InitStruct);
 157              		.loc 1 198 0
 158 0036 0393     		str	r3, [sp, #12]
 199:Src/tim.c     **** 
 159              		.loc 1 199 0
 160 0038 6946     		mov	r1, sp
 161 003a 0448     		ldr	r0, .L15+8
 162              	.LVL7:
 163 003c FFF7FEFF 		bl	HAL_GPIO_Init
 164              	.LVL8:
 165              		.loc 1 206 0
 166 0040 E7E7     		b	.L9
 167              	.L16:
 168 0042 00BF     		.align	2
 169              	.L15:
 170 0044 002C0140 		.word	1073818624
 171 0048 00040040 		.word	1073742848
 172 004c 00080140 		.word	1073809408
 173              		.cfi_endproc
 174              	.LFE69:
 176              		.section	.text.MX_TIM1_Init,"ax",%progbits
 177              		.align	1
 178              		.global	MX_TIM1_Init
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu softvfp
 184              	MX_TIM1_Init:
 185              	.LFB66:
  52:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 186              		.loc 1 52 0
 187              		.cfi_startproc
ARM GAS  /tmp/ccQpm1zg.s 			page 8


 188              		@ args = 0, pretend = 0, frame = 64
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 00B5     		push	{lr}
 191              	.LCFI7:
 192              		.cfi_def_cfa_offset 4
 193              		.cfi_offset 14, -4
 194 0002 91B0     		sub	sp, sp, #68
 195              	.LCFI8:
 196              		.cfi_def_cfa_offset 72
  57:Src/tim.c     ****   htim1.Init.Prescaler = 0;
 197              		.loc 1 57 0
 198 0004 2648     		ldr	r0, .L27
 199 0006 274B     		ldr	r3, .L27+4
 200 0008 0360     		str	r3, [r0]
  58:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 201              		.loc 1 58 0
 202 000a 0023     		movs	r3, #0
 203 000c 4360     		str	r3, [r0, #4]
  59:Src/tim.c     ****   htim1.Init.Period = 0;
 204              		.loc 1 59 0
 205 000e 8360     		str	r3, [r0, #8]
  60:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 206              		.loc 1 60 0
 207 0010 C360     		str	r3, [r0, #12]
  61:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
 208              		.loc 1 61 0
 209 0012 0361     		str	r3, [r0, #16]
  62:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 210              		.loc 1 62 0
 211 0014 4361     		str	r3, [r0, #20]
  63:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 212              		.loc 1 63 0
 213 0016 8361     		str	r3, [r0, #24]
  64:Src/tim.c     ****   {
 214              		.loc 1 64 0
 215 0018 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 216              	.LVL9:
 217 001c 0028     		cmp	r0, #0
 218 001e 2AD1     		bne	.L23
 219              	.L18:
  69:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 220              		.loc 1 69 0
 221 0020 0023     		movs	r3, #0
 222 0022 0E93     		str	r3, [sp, #56]
  70:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 223              		.loc 1 70 0
 224 0024 0F93     		str	r3, [sp, #60]
  71:Src/tim.c     ****   {
 225              		.loc 1 71 0
 226 0026 0EA9     		add	r1, sp, #56
 227 0028 1D48     		ldr	r0, .L27
 228 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 229              	.LVL10:
 230 002e 38BB     		cbnz	r0, .L24
 231              	.L19:
  76:Src/tim.c     ****   sConfigOC.Pulse = 0;
 232              		.loc 1 76 0
ARM GAS  /tmp/ccQpm1zg.s 			page 9


 233 0030 6023     		movs	r3, #96
 234 0032 0793     		str	r3, [sp, #28]
  77:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 235              		.loc 1 77 0
 236 0034 0022     		movs	r2, #0
 237 0036 0892     		str	r2, [sp, #32]
  78:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 238              		.loc 1 78 0
 239 0038 0992     		str	r2, [sp, #36]
  79:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 240              		.loc 1 79 0
 241 003a 0A92     		str	r2, [sp, #40]
  80:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 242              		.loc 1 80 0
 243 003c 0B92     		str	r2, [sp, #44]
  81:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 244              		.loc 1 81 0
 245 003e 0C92     		str	r2, [sp, #48]
  82:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 246              		.loc 1 82 0
 247 0040 0D92     		str	r2, [sp, #52]
  83:Src/tim.c     ****   {
 248              		.loc 1 83 0
 249 0042 07A9     		add	r1, sp, #28
 250 0044 1648     		ldr	r0, .L27
 251 0046 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 252              	.LVL11:
 253 004a F0B9     		cbnz	r0, .L25
 254              	.L20:
  88:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 255              		.loc 1 88 0
 256 004c 0023     		movs	r3, #0
 257 004e 0093     		str	r3, [sp]
  89:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 258              		.loc 1 89 0
 259 0050 0193     		str	r3, [sp, #4]
  90:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 0;
 260              		.loc 1 90 0
 261 0052 0293     		str	r3, [sp, #8]
  91:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 262              		.loc 1 91 0
 263 0054 0393     		str	r3, [sp, #12]
  92:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 264              		.loc 1 92 0
 265 0056 0493     		str	r3, [sp, #16]
  93:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 266              		.loc 1 93 0
 267 0058 4FF40052 		mov	r2, #8192
 268 005c 0592     		str	r2, [sp, #20]
  94:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 269              		.loc 1 94 0
 270 005e 0693     		str	r3, [sp, #24]
  95:Src/tim.c     ****   {
 271              		.loc 1 95 0
 272 0060 6946     		mov	r1, sp
 273 0062 0F48     		ldr	r0, .L27
 274 0064 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
ARM GAS  /tmp/ccQpm1zg.s 			page 10


 275              	.LVL12:
 276 0068 A0B9     		cbnz	r0, .L26
 277              	.L21:
 100:Src/tim.c     **** 
 278              		.loc 1 100 0
 279 006a 0D48     		ldr	r0, .L27
 280 006c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 281              	.LVL13:
 102:Src/tim.c     **** /* TIM3 init function */
 282              		.loc 1 102 0
 283 0070 11B0     		add	sp, sp, #68
 284              	.LCFI9:
 285              		.cfi_remember_state
 286              		.cfi_def_cfa_offset 4
 287              		@ sp needed
 288 0072 5DF804FB 		ldr	pc, [sp], #4
 289              	.L23:
 290              	.LCFI10:
 291              		.cfi_restore_state
  66:Src/tim.c     ****   }
 292              		.loc 1 66 0
 293 0076 4221     		movs	r1, #66
 294 0078 0B48     		ldr	r0, .L27+8
 295 007a FFF7FEFF 		bl	_Error_Handler
 296              	.LVL14:
 297 007e CFE7     		b	.L18
 298              	.L24:
  73:Src/tim.c     ****   }
 299              		.loc 1 73 0
 300 0080 4921     		movs	r1, #73
 301 0082 0948     		ldr	r0, .L27+8
 302 0084 FFF7FEFF 		bl	_Error_Handler
 303              	.LVL15:
 304 0088 D2E7     		b	.L19
 305              	.L25:
  85:Src/tim.c     ****   }
 306              		.loc 1 85 0
 307 008a 5521     		movs	r1, #85
 308 008c 0648     		ldr	r0, .L27+8
 309 008e FFF7FEFF 		bl	_Error_Handler
 310              	.LVL16:
 311 0092 DBE7     		b	.L20
 312              	.L26:
  97:Src/tim.c     ****   }
 313              		.loc 1 97 0
 314 0094 6121     		movs	r1, #97
 315 0096 0448     		ldr	r0, .L27+8
 316 0098 FFF7FEFF 		bl	_Error_Handler
 317              	.LVL17:
 318 009c E5E7     		b	.L21
 319              	.L28:
 320 009e 00BF     		.align	2
 321              	.L27:
 322 00a0 00000000 		.word	htim1
 323 00a4 002C0140 		.word	1073818624
 324 00a8 00000000 		.word	.LC0
 325              		.cfi_endproc
ARM GAS  /tmp/ccQpm1zg.s 			page 11


 326              	.LFE66:
 328              		.section	.text.MX_TIM3_Init,"ax",%progbits
 329              		.align	1
 330              		.global	MX_TIM3_Init
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu softvfp
 336              	MX_TIM3_Init:
 337              	.LFB67:
 105:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 338              		.loc 1 105 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 40
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342 0000 00B5     		push	{lr}
 343              	.LCFI11:
 344              		.cfi_def_cfa_offset 4
 345              		.cfi_offset 14, -4
 346 0002 8BB0     		sub	sp, sp, #44
 347              	.LCFI12:
 348              		.cfi_def_cfa_offset 48
 109:Src/tim.c     ****   htim3.Init.Prescaler = 0;
 349              		.loc 1 109 0
 350 0004 1948     		ldr	r0, .L37
 351 0006 1A4B     		ldr	r3, .L37+4
 352 0008 0360     		str	r3, [r0]
 110:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 353              		.loc 1 110 0
 354 000a 0023     		movs	r3, #0
 355 000c 4360     		str	r3, [r0, #4]
 111:Src/tim.c     ****   htim3.Init.Period = 0;
 356              		.loc 1 111 0
 357 000e 8360     		str	r3, [r0, #8]
 112:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 358              		.loc 1 112 0
 359 0010 C360     		str	r3, [r0, #12]
 113:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 360              		.loc 1 113 0
 361 0012 0361     		str	r3, [r0, #16]
 114:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 362              		.loc 1 114 0
 363 0014 8361     		str	r3, [r0, #24]
 115:Src/tim.c     ****   {
 364              		.loc 1 115 0
 365 0016 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 366              	.LVL18:
 367 001a C0B9     		cbnz	r0, .L34
 368              	.L30:
 120:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 369              		.loc 1 120 0
 370 001c 0023     		movs	r3, #0
 371 001e 0893     		str	r3, [sp, #32]
 121:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 372              		.loc 1 121 0
 373 0020 0993     		str	r3, [sp, #36]
 122:Src/tim.c     ****   {
ARM GAS  /tmp/ccQpm1zg.s 			page 12


 374              		.loc 1 122 0
 375 0022 08A9     		add	r1, sp, #32
 376 0024 1148     		ldr	r0, .L37
 377 0026 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 378              	.LVL19:
 379 002a A8B9     		cbnz	r0, .L35
 380              	.L31:
 127:Src/tim.c     ****   sConfigOC.Pulse = 0;
 381              		.loc 1 127 0
 382 002c 6023     		movs	r3, #96
 383 002e 0193     		str	r3, [sp, #4]
 128:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 384              		.loc 1 128 0
 385 0030 0022     		movs	r2, #0
 386 0032 0292     		str	r2, [sp, #8]
 129:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 387              		.loc 1 129 0
 388 0034 0392     		str	r2, [sp, #12]
 130:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 389              		.loc 1 130 0
 390 0036 0592     		str	r2, [sp, #20]
 131:Src/tim.c     ****   {
 391              		.loc 1 131 0
 392 0038 01A9     		add	r1, sp, #4
 393 003a 0C48     		ldr	r0, .L37
 394 003c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 395              	.LVL20:
 396 0040 78B9     		cbnz	r0, .L36
 397              	.L32:
 136:Src/tim.c     **** 
 398              		.loc 1 136 0
 399 0042 0A48     		ldr	r0, .L37
 400 0044 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 401              	.LVL21:
 138:Src/tim.c     **** 
 402              		.loc 1 138 0
 403 0048 0BB0     		add	sp, sp, #44
 404              	.LCFI13:
 405              		.cfi_remember_state
 406              		.cfi_def_cfa_offset 4
 407              		@ sp needed
 408 004a 5DF804FB 		ldr	pc, [sp], #4
 409              	.L34:
 410              	.LCFI14:
 411              		.cfi_restore_state
 117:Src/tim.c     ****   }
 412              		.loc 1 117 0
 413 004e 7521     		movs	r1, #117
 414 0050 0848     		ldr	r0, .L37+8
 415 0052 FFF7FEFF 		bl	_Error_Handler
 416              	.LVL22:
 417 0056 E1E7     		b	.L30
 418              	.L35:
 124:Src/tim.c     ****   }
 419              		.loc 1 124 0
 420 0058 7C21     		movs	r1, #124
 421 005a 0648     		ldr	r0, .L37+8
ARM GAS  /tmp/ccQpm1zg.s 			page 13


 422 005c FFF7FEFF 		bl	_Error_Handler
 423              	.LVL23:
 424 0060 E4E7     		b	.L31
 425              	.L36:
 133:Src/tim.c     ****   }
 426              		.loc 1 133 0
 427 0062 8521     		movs	r1, #133
 428 0064 0348     		ldr	r0, .L37+8
 429 0066 FFF7FEFF 		bl	_Error_Handler
 430              	.LVL24:
 431 006a EAE7     		b	.L32
 432              	.L38:
 433              		.align	2
 434              	.L37:
 435 006c 00000000 		.word	htim3
 436 0070 00040040 		.word	1073742848
 437 0074 00000000 		.word	.LC0
 438              		.cfi_endproc
 439              	.LFE67:
 441              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 442              		.align	1
 443              		.global	HAL_TIM_PWM_MspDeInit
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 447              		.fpu softvfp
 449              	HAL_TIM_PWM_MspDeInit:
 450              	.LFB70:
 207:Src/tim.c     **** 
 208:Src/tim.c     **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 209:Src/tim.c     **** {
 451              		.loc 1 209 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              		@ link register save eliminated.
 456              	.LVL25:
 210:Src/tim.c     **** 
 211:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM1)
 457              		.loc 1 211 0
 458 0000 0368     		ldr	r3, [r0]
 459 0002 0A4A     		ldr	r2, .L44
 460 0004 9342     		cmp	r3, r2
 461 0006 03D0     		beq	.L42
 212:Src/tim.c     ****   {
 213:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 214:Src/tim.c     **** 
 215:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 0 */
 216:Src/tim.c     ****     /* Peripheral clock disable */
 217:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_DISABLE();
 218:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 219:Src/tim.c     **** 
 220:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 1 */
 221:Src/tim.c     ****   }
 222:Src/tim.c     ****   else if(tim_pwmHandle->Instance==TIM3)
 462              		.loc 1 222 0
 463 0008 094A     		ldr	r2, .L44+4
ARM GAS  /tmp/ccQpm1zg.s 			page 14


 464 000a 9342     		cmp	r3, r2
 465 000c 07D0     		beq	.L43
 466              	.L39:
 223:Src/tim.c     ****   {
 224:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 225:Src/tim.c     **** 
 226:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 227:Src/tim.c     ****     /* Peripheral clock disable */
 228:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 229:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 230:Src/tim.c     **** 
 231:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 232:Src/tim.c     ****   }
 233:Src/tim.c     **** } 
 467              		.loc 1 233 0
 468 000e 7047     		bx	lr
 469              	.L42:
 217:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 470              		.loc 1 217 0
 471 0010 02F56442 		add	r2, r2, #58368
 472 0014 9369     		ldr	r3, [r2, #24]
 473 0016 23F40063 		bic	r3, r3, #2048
 474 001a 9361     		str	r3, [r2, #24]
 475 001c 7047     		bx	lr
 476              	.L43:
 228:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 477              		.loc 1 228 0
 478 001e 02F50332 		add	r2, r2, #134144
 479 0022 D369     		ldr	r3, [r2, #28]
 480 0024 23F00203 		bic	r3, r3, #2
 481 0028 D361     		str	r3, [r2, #28]
 482              		.loc 1 233 0
 483 002a F0E7     		b	.L39
 484              	.L45:
 485              		.align	2
 486              	.L44:
 487 002c 002C0140 		.word	1073818624
 488 0030 00040040 		.word	1073742848
 489              		.cfi_endproc
 490              	.LFE70:
 492              		.comm	htim3,64,4
 493              		.comm	htim1,64,4
 494              		.section	.rodata.MX_TIM1_Init.str1.4,"aMS",%progbits,1
 495              		.align	2
 496              	.LC0:
 497 0000 5372632F 		.ascii	"Src/tim.c\000"
 497      74696D2E 
 497      6300
 498              		.text
 499              	.Letext0:
 500              		.file 2 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machi
 501              		.file 3 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_
 502              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 503              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 504              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 505              		.file 7 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/l
 506              		.file 8 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_
ARM GAS  /tmp/ccQpm1zg.s 			page 15


 507              		.file 9 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1
 508              		.file 10 "/home/logic/STM32Toolchain/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/
 509              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 510              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 511              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 512              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 513              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 514              		.file 16 "Inc/tim.h"
ARM GAS  /tmp/ccQpm1zg.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccQpm1zg.s:16     .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/ccQpm1zg.s:23     .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/ccQpm1zg.s:84     .text.HAL_TIM_PWM_MspInit:0000000000000040 $d
     /tmp/ccQpm1zg.s:91     .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccQpm1zg.s:98     .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccQpm1zg.s:170    .text.HAL_TIM_MspPostInit:0000000000000044 $d
     /tmp/ccQpm1zg.s:177    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccQpm1zg.s:184    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccQpm1zg.s:322    .text.MX_TIM1_Init:00000000000000a0 $d
                            *COM*:0000000000000040 htim1
     /tmp/ccQpm1zg.s:329    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccQpm1zg.s:336    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccQpm1zg.s:435    .text.MX_TIM3_Init:000000000000006c $d
                            *COM*:0000000000000040 htim3
     /tmp/ccQpm1zg.s:442    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/ccQpm1zg.s:449    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccQpm1zg.s:487    .text.HAL_TIM_PWM_MspDeInit:000000000000002c $d
     /tmp/ccQpm1zg.s:495    .rodata.MX_TIM1_Init.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
_Error_Handler
